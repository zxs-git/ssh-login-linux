#!/usr/bin/python3
import json
import os
import sys
from prettytable import PrettyTable

class ServerBean(object):
	"""docstring for ClassName"""
	inIp="";
	outIp="";
	password="";
	remark="";
	user="";
	
	def __init__(self,inIp,outIp,password,remark,user):
		self.inIp = inIp;
		self.outIp = outIp;
		self.password = password;
		self.remark = remark;
		self.user = user;

numServerList=[];
numEnvList=[];

# 菜单类
class Menu(object):

	def showEnvList(self,serverConfigPath):
		envNum = 1;
		with open(serverConfigPath,'r') as load_f:
			serverJson = json.load(load_f);
			for envList in serverJson:
				env = envList["ENV"];
				print(str(envNum)+":"+env)
				envNum = envNum+1;
				numEnvList.append(env);

	def getEnvByNum(self,num):
		return numEnvList[num];


	def showServerList(self,env,serverConfigPath):
		serverNum = 1;
		with open(serverConfigPath,'r') as load_f:
			serverJson = json.load(load_f);
			for envList in serverJson:
				if(envList["ENV"] == env):
					print("+========================"+envList["ENV"]+"===============================+")
					table=PrettyTable(["编号","内网ip","外网ip","备注"])
					serviceList = envList["SERVICE_LIST"];
					for service in serviceList:
						table.add_row([serverNum,service["inIp"],service["outIp"],service["remark"]])

						sBean=ServerBean(service["inIp"],service["outIp"],service["password"],service["remark"],service["user"]);

						numServerList.append(sBean);
						serverNum=serverNum+1;

					table.align["内网ip"] = 'l';
					table.align["外网ip"] = 'l';
					table.align["备注"] = 'l';
					print(table);

# 用户操作类
class UserAction(object):
	# 输入校验
	def intputCheck(self,message,maxInputLength,step):
		num = input(message+":")
		if num == "":
			sys.exit(0);
		if(int(num) > maxInputLength):
			sys.exit(0);
		return num;

	# 选择环境
	def envChoose(self):
		# 菜单类
		menu=Menu();
		menu.showEnvList(serverConfigPath);
		envStep = 1;
		num = userAction.intputCheck("please input env num",len(numEnvList),envStep);
		env = menu.getEnvByNum(int(num)-1);
		menu.showServerList(env,serverConfigPath);
		self.serverChoose();

	# 选择服务器
	def serverChoose(self):
		serverStep = 2;
		num = userAction.intputCheck("please input server num",len(numServerList),serverStep);

		if(int(num) == 0):
			self.envChoose();
		else:
			server = numServerList[int(num)-1];
			os.system("./conn_server.sh "+server.user+" "+server.password+" "+server.inIp)


serverConfigPath="serverConfig.json";


# 输入校验类
userAction=UserAction();
userAction.envChoose();



		
